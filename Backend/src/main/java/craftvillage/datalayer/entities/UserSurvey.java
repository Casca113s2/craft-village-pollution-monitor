package craftvillage.datalayer.entities;
// Generated Mar 10, 2020 9:28:01 AM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonFormat;

import craftvillage.corelayer.utilities.ConstantParameter;

/**
 * UserSurvey generated by hbm2java
 */
@Entity
@Table(name = "USER_SURVEY", schema = ConstantParameter._SCHEMA_NAME)
public class UserSurvey implements java.io.Serializable {

	private int id;
	private UrUser urUser;
	private String isTemporary;
	@Temporal(TemporalType.TIMESTAMP)
	private Date dateSubmitSurvey;
	private String image;
	private String coordinate;
	
	private SrActive srActive;
	private Set<UserSurveyAnswer> userSurveyAnswers = new LinkedHashSet<UserSurveyAnswer>(0);
	private Village village;

	@Id
	@OrderBy("id ASC")
	@GeneratedValue(strategy = GenerationType.AUTO, generator="UR_SERVEY_SEQ")
	@Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}
	@JsonBackReference
	@ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	@JoinColumn(name = "UR_ID", nullable = false)
	public UrUser getUrUser() {
		return this.urUser;
	}

	public void setUrUser(UrUser urUser) {
		this.urUser = urUser;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "SAC_ID", nullable = false)
	public SrActive getSrActive() {
		return this.srActive;
	}

	public void setSrActive(SrActive srActive) {
		this.srActive = srActive;
	}

	@Column(name = "IS_TEMPORARY", length = 40)
	public String getIsTemporary() {
		return this.isTemporary;
	}

	public void setIsTemporary(String isTemporary) {
		this.isTemporary = isTemporary;
	}
	

//end	
	
	@ManyToOne(fetch = FetchType.LAZY, targetEntity = Village.class)
	@JoinColumn(name = "VILLAGE_ID")
	public Village getVillage() {
		return village;
	}
	
	public void setVillage(Village village) {
		this.village = village;
	}
	
	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER, mappedBy = "userSurvey")
	public Set<UserSurveyAnswer> getUserSurveyAnswers() {
		return this.userSurveyAnswers;
	}


	public void setUserSurveyAnswers(Set<UserSurveyAnswer> userSurveyAnswers) {
		this.userSurveyAnswers = userSurveyAnswers;
	}
	
	@JsonFormat(pattern="dd-MM-yyyy hh:mm:ss")
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_SUBMIT_SURVEY", precision = 126, scale = 0)
	@OrderBy("DESC")
	public Date getDateSubmitSurvey() {
		return dateSubmitSurvey;
	}

	public void setDateSubmitSurvey(Date dateSubmitSurvey) {
		this.dateSubmitSurvey = dateSubmitSurvey;
	}

	@Column(name = "IMAGE")
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}
	
	@Column(name = "COORDINATE")
	public String getCoordinate() {
		return this.coordinate;
	}

	public void setCoordinate(String coordinate) {
		this.coordinate = coordinate;
	}
}
